install.packages("lubridate", "tidyverse", "janitor")
install.packages("lubridate")
install.packages("tidyverse")
install.packages("tidymodels")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
install.packages("janitor")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(lubridate)
url <- "https://data.cityofchicago.org/api/views/5neh-572f/rows.csv?accessType=DOWNLOAD&bom=true&format=true"
all_stations_raw <- read_csv(url)
all_stations <- all_stations_raw %>%
# Step 2: get columns and rename stationname
select(station = stationname, date, rides, day_type = daytype) %>%
# Step 3: Convert the character date field to a date encoding.
# This uses the "lubridate" package
# Also, put the data in units of 1K rides
# Convert day_type to a factor and rename the levels
mutate(
date = mdy(date),
rides = rides / 1000,
day_type = recode(
as.factor(day_type),
"W" = "weekday", "A" = "saturday", "U" = "sunday/holiday"
)
)
all_stations %>%
select(where(is_character))
# with pipe
all_stations %>%
mutate(month = month(date)) %>%
unique(month)
# with pipe
all_stations %>%
mutate(month = month(date)) %>%
count()
# with pipe
all_stations %>%
mutate(month = month(date)) %>%
dim()
# with pipe
all_stations %>%
mutate(month = month(date)) %>%
glimpse()
#no pipe
glimpse( mutate(all_stations, month = month(date)) )
all_stations %>%
filter(day_type != "sunday/holiday")
all_stations %>%
filter(day_type == "weekday")
TRUE & FALSE
print(TRUE & FALSE)
print(TRUE | FALSE)
print(TRUE & FALSE)
print(TRUE & TRUE)
print(TRUE | FALSE)
all_stations %>%
filter(day_type == "weekday" & year(date) > 2022)
all_stations %>%
filter(day_type == "weekday" & year(date) > 2020)
all_stations %>%
arrange(desc()) %>%
slice(1)
all_stations %>%
arrange(desc) %>%
slice(1)
all_stations %>%
arrange() %>%
slice(1)
all_stations %>%
arrange(desc(date)) %>%
slice(1)
all_stations %>%
arrange(desc(date)) %>%
head()
all_stations %>%
group_by(date) %>%
#compute two new vars: total_rides to count up all the rides in each group, and num to see how big each group is
summrize(total_rides = sum(rides), num = n())
all_stations %>%
group_by(date) %>%
#compute two new vars: total_rides to count up all the rides in each group, and num to see how big each group is
summarize(total_rides = sum(rides), num = n())
all_stations %>%
filter(year(date) > 2018) %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
ggplot(aes(x=date, y=rides)) +
geom_line()
all_stations %>%
filter(year(date) > 2018) %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
ggplot(aes(x=date, y=rides)) +
geom_line()
all_stations %>%
filter(year(date) > 2018) %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
ggplot(aes(x=date, y=rides)) +
geom_line()
install.packages("zoo")
library(zoo)
# a better way
library(zoo)
all_stations %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
arrange(date) %>%
mutate(rides_rolling_avg = rollmean(rides, 7) )
# a better way
library(zoo)
all_stations %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
arrange(date) %>%
mutate(rides_rolling_avg = rollmean(rides, 7, na.pad=TRUE) )
# a better way
library(zoo)
all_stations %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
arrange(date) %>%
mutate(rides_rolling_avg = rollmean(rides, 7, na.pad=TRUE) ) %>%
glimpse()
# a better way
library(zoo)
all_stations %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
arrange(date) %>%
mutate(rides_rolling_avg = rollmean(rides, 7, na.pad=TRUE) ) %>%
ggplot(aes(x=date, y=rides_rolling_avg)) +
geom_point(aes(y=rides_rolling_avg)) +
geom_line() +
labs(
title = "7-day Rolling Avg CTA ridership",
y = "Ridership (in thousands)",
x = ""
)
# a better way
library(zoo)
all_stations %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
arrange(date) %>%
mutate(rides_rolling_avg = rollmean(rides, 7, na.pad=TRUE) ) %>%
ggplot(aes(x=date, y=rides_rolling_avg)) +
geom_point(aes(y=rides_rolling_avg)) +
geom_line() +
labs(
title = "7-day Rolling Avg CTA ridership",
y = "Ridership (in thousands)",
x = ""
)
# a better way
library(zoo)
all_stations %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
arrange(date) %>%
mutate(rides_rolling_avg = rollmean(rides, 7, na.pad=TRUE) ) %>%
ggplot(aes(x=date, y=rides_rolling_avg)) +
geom_point(aes(y=rides_rolling_avg)) +
geom_line() +
labs(
title = "7-day Rolling Avg CTA ridership",
y = "Ridership (in thousands)",
x = ""
)
# a better way
library(zoo)
all_stations %>%
group_by(date) %>%
summarize(rides = sum(rides)) %>%
arrange(date) %>%
mutate(rides_rolling_avg = rollmean(rides, 7, na.pad=TRUE) ) %>%
ggplot(aes(x=date, y=rides_rolling_avg)) +
geom_point(aes(y=rides_rolling_avg), alpha=.4, size=1.5) +
geom_line(color="darkred") +
labs(
title = "7-day Rolling Avg CTA ridership",
y = "Ridership (in thousands)",
x = ""
)
read_csv("# this is the first line of the file
# this is the second
thing one, thing two, thing three
1.0, 2.3, 4.5
2, 4, 5")
